---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: cilium
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: cilium
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: cilium
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: cilium
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: cilium
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU54UXpTaEZrc1B1NHhoNzFOWjAybTB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURReU5qRXdOVFExTUZvWERUSTJNRFF5TlRFdwpOVFExTUZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUExZ01IL1ZhR0FRRUpzTm1aL3RDeTZEdHFMTzVNM0RkSnB2bHdYU0c0T1AxN3ZtRnMKRm9ab2JjMTdVQ2E3eEZBd1ZOMzBnY0xXZGx2Z1BIa3MyTEgxVUQvOXg1ZFo5bVhwNHVGa3JDN2JhcUpLL2J5OQp3NzJPODBSQ1BES2N1TUpZanBsYjZsRDhVT2Q3QlBvQmhnOUU2c2JlZXltemYxbW1nTzdpRkdXKzAwekdPSmc5CkJ6YmZyZ2lMK3NFQ3BRNnRnazU3STROOWMxd25wN3UyWmRhZ1dmVDg2eGJEQlR5eTNxTUZwN2ZWSktFckN4aXYKdUFtQ1Zvdi9xTjZsRjM3ZUZ0ZlJjaW8yb2ZOam9naXN2SHZhR3pkV3o5YldMcmk4bWJTeVp3ZEx2NXU3OWFlagpvSG5ZYkZDZGE0MGpUN1AwTXFRWlg4aVF5ZEUwWlJ2VjdXVUN1UUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRFpwY1V2V0ZIa3NWZklWM0xEWm96R29ETUlWTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ3VUZmR6V2xuS1hjcFBxUmNmaHVGS2hrOUVaVU02Zkx6Zm0vM3FrSjJ0MCtyUFhtQTFhN2dZCmJQQldUS1VIMnFpeWllMk5jMmd5LzQ0cC9oR3EveEpnSXpienEvMFhxL0hkMWIxdjVEeHdIcjNCWUEzWm1UQW0KaDBTS0tPV1FSZVVoeUF1QThKUzgrOGhxZXVENVFOMlE2T2tlSGJ3bU91bUFMZzZRcU5DVHlYZHFSUFNON0lMVQorRDhVS1d5VEZvNFl0MnVwVm5CQUVGSFhvaGpNRUZTRCtZK3V1VHo3MVdjQ0F1TGp1d1ZzbmtMNU5zYWpGWU1KCnVLTlIreGtiN05XTFlBZkNtNDFXVU5FTlVPVmgrSjhlWFhTcDU4OVRTVVJBNzRlWnh5Ny9mcmtIMittdkRqMVAKbU4zYnFtc29XTkRtM2ZDVWw1K1Vub0hVL1ZxY2dCbVAKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMWdNSC9WYUdBUUVKc05tWi90Q3k2RHRxTE81TTNEZEpwdmx3WFNHNE9QMTd2bUZzCkZvWm9iYzE3VUNhN3hGQXdWTjMwZ2NMV2RsdmdQSGtzMkxIMVVELzl4NWRaOW1YcDR1RmtyQzdiYXFKSy9ieTkKdzcyTzgwUkNQREtjdU1KWWpwbGI2bEQ4VU9kN0JQb0JoZzlFNnNiZWV5bXpmMW1tZ083aUZHVyswMHpHT0pnOQpCemJmcmdpTCtzRUNwUTZ0Z2s1N0k0TjljMXducDd1MlpkYWdXZlQ4NnhiREJUeXkzcU1GcDdmVkpLRXJDeGl2CnVBbUNWb3YvcU42bEYzN2VGdGZSY2lvMm9mTmpvZ2lzdkh2YUd6ZFd6OWJXTHJpOG1iU3lad2RMdjV1NzlhZWoKb0huWWJGQ2RhNDBqVDdQME1xUVpYOGlReWRFMFpSdlY3V1VDdVFJREFRQUJBb0lCQUE1TDRZckE3dTYrUFFGOQpaOVluNXV1d25HVW4vaVp2NHhHdWRCMGtsWVBwR3cwYXdQZTRQdDJtN21mcVRuek14bzNFemdLbEcyS0l2TEFOCmdEdHhsK3VtZXJPTW5zdmcvd0RUQWNDbTJLMkU3ZkdKWER2cE85VndaK1JSbFRxYWNRUUZwcWcraEx4NjJqTDQKNklVbUcvcDdFbjJ6eVhQbWIwTUpzanllbDJMU0RONEdwaVY0dHczVU4vS3h6MWpQSHJlVzRvK1V5Nm9MWEx1SwpmUklhY1F2WmUzcDRmQ2l4TEJ2em1NRUxjUlJCbkFrdHd4S2pzeUFWOHZickNQVlVNUXhRMzhxWjBYbGM0cVlXCjYrTE9ManVBSnF0eXhpb0t3OEw5VlhleGw4Tm1PMG5kZTViNHdPK0ZKS1pWL3VYcTZNMWxDQTRQc0NMVlBGVncKZ0ZNZEVDRUNnWUVBNlp6MzZ2OGc4TGhIckdDQjE5MmJxbC9kcGlzeGxobUdBOVZuWDZZUXFQN0syR09HNTVNZwp6Ynh0bm5Na2xNd0xyK2RIbXJBVVQrU1VIQkgyR3dSaVJLYkNvVUtwOVB0VkdKNXNxREVVanhMcHdPdHVqWlA5Ci9ieDFvM0hEckNtY1hYcEVOeWFYOEFBSURhWHBMdnU5ZW4zK3A4VHE0MUFuajNsR3RyMlAxQTBDZ1lFQTZvVXoKVUlFVHJrRjJLQTZmNFlpQTlQRTZqeC9pMk16YWlkMWVQbU9sZ1JxeDlZVGYwQ1pka3J4N0VDaUVvQ1Q0S3huagpUN2MzM3hMVGt0Z3FZM1hkcUxwM2F5aUJ4YnZEMVRDbzRpMTljOTIySUozTmxXUkxUaVB2bjY0WStBN09OZVV1CmVsM0xkWkJNaHlYMzJlY1lXUzBjNFZmOGlsdzZlWnhnTCs3WVlsMENnWUJlNnd4QVN4RVRQWXpCbVNTb2xMNGUKNTN5amU0RldQMkNZUmlrT1QrY05BeGxmK25CaHZ3SGhGZUprTXR4MktNSEc0dTNSQ0NINHBDTVpsS0t1TDRYTgo1d1BGaWRTTVdXSWw4cGlyYmVXd2pEcTF5L0xMUzRvemdsTTU2WXRiZER5NExtbHhEeGxFeG41L0xSNGxuTnRMCjNjMk9WUkFxOC9KZTlTT3FORE13TVFLQmdRRGlGUlRaK0FWTUNNbHFabWJWR2k0UGMvb2EvZ2RITDMxQ1NNalEKNW1rbjQ5OUpMQlpEYUtqdWk0c3JrWlFCZW9KUHNyNURIQUxkcHgyVnc1UmhtNy9iS0I5MWkzQkhlZktaTkRhcgpER1dUYkZwbWFScEdlWkJyUFJPRllXV3F4VU1nQzlkWm1kQkpmcGwzOUM5U3Zvam5keWtQU0M0cUNDMUxEV2hnCjdTVm05UUtCZ1FDdm84ajlwamhTT2pPSEdOamFtaUF0cW5ycXN3WU1PQkxWWkNjbmE4TmdQWWFHM3BNTHAxbUcKcWJMeUxodDVpblV5cGV2Mm5HOXEwdXIrVzBqMHdWSHVWUGY2MWNBYXRoZXdrdWxHb0RyMGZlSW1DaGxUWnVycwpPMWdweU43M3h1cGNlK1huNngvNVFwSm9HeWt6WElKY1luUXExbnZFUGtNUjNsd2JSa1RPbkE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: cilium
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU54UXpTaEZrc1B1NHhoNzFOWjAybTB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURReU5qRXdOVFExTUZvWERUSTJNRFF5TlRFdwpOVFExTUZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUExZ01IL1ZhR0FRRUpzTm1aL3RDeTZEdHFMTzVNM0RkSnB2bHdYU0c0T1AxN3ZtRnMKRm9ab2JjMTdVQ2E3eEZBd1ZOMzBnY0xXZGx2Z1BIa3MyTEgxVUQvOXg1ZFo5bVhwNHVGa3JDN2JhcUpLL2J5OQp3NzJPODBSQ1BES2N1TUpZanBsYjZsRDhVT2Q3QlBvQmhnOUU2c2JlZXltemYxbW1nTzdpRkdXKzAwekdPSmc5CkJ6YmZyZ2lMK3NFQ3BRNnRnazU3STROOWMxd25wN3UyWmRhZ1dmVDg2eGJEQlR5eTNxTUZwN2ZWSktFckN4aXYKdUFtQ1Zvdi9xTjZsRjM3ZUZ0ZlJjaW8yb2ZOam9naXN2SHZhR3pkV3o5YldMcmk4bWJTeVp3ZEx2NXU3OWFlagpvSG5ZYkZDZGE0MGpUN1AwTXFRWlg4aVF5ZEUwWlJ2VjdXVUN1UUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRFpwY1V2V0ZIa3NWZklWM0xEWm96R29ETUlWTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ3VUZmR6V2xuS1hjcFBxUmNmaHVGS2hrOUVaVU02Zkx6Zm0vM3FrSjJ0MCtyUFhtQTFhN2dZCmJQQldUS1VIMnFpeWllMk5jMmd5LzQ0cC9oR3EveEpnSXpienEvMFhxL0hkMWIxdjVEeHdIcjNCWUEzWm1UQW0KaDBTS0tPV1FSZVVoeUF1QThKUzgrOGhxZXVENVFOMlE2T2tlSGJ3bU91bUFMZzZRcU5DVHlYZHFSUFNON0lMVQorRDhVS1d5VEZvNFl0MnVwVm5CQUVGSFhvaGpNRUZTRCtZK3V1VHo3MVdjQ0F1TGp1d1ZzbmtMNU5zYWpGWU1KCnVLTlIreGtiN05XTFlBZkNtNDFXVU5FTlVPVmgrSjhlWFhTcDU4OVRTVVJBNzRlWnh5Ny9mcmtIMittdkRqMVAKbU4zYnFtc29XTkRtM2ZDVWw1K1Vub0hVL1ZxY2dCbVAKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMWdNSC9WYUdBUUVKc05tWi90Q3k2RHRxTE81TTNEZEpwdmx3WFNHNE9QMTd2bUZzCkZvWm9iYzE3VUNhN3hGQXdWTjMwZ2NMV2RsdmdQSGtzMkxIMVVELzl4NWRaOW1YcDR1RmtyQzdiYXFKSy9ieTkKdzcyTzgwUkNQREtjdU1KWWpwbGI2bEQ4VU9kN0JQb0JoZzlFNnNiZWV5bXpmMW1tZ083aUZHVyswMHpHT0pnOQpCemJmcmdpTCtzRUNwUTZ0Z2s1N0k0TjljMXducDd1MlpkYWdXZlQ4NnhiREJUeXkzcU1GcDdmVkpLRXJDeGl2CnVBbUNWb3YvcU42bEYzN2VGdGZSY2lvMm9mTmpvZ2lzdkh2YUd6ZFd6OWJXTHJpOG1iU3lad2RMdjV1NzlhZWoKb0huWWJGQ2RhNDBqVDdQME1xUVpYOGlReWRFMFpSdlY3V1VDdVFJREFRQUJBb0lCQUE1TDRZckE3dTYrUFFGOQpaOVluNXV1d25HVW4vaVp2NHhHdWRCMGtsWVBwR3cwYXdQZTRQdDJtN21mcVRuek14bzNFemdLbEcyS0l2TEFOCmdEdHhsK3VtZXJPTW5zdmcvd0RUQWNDbTJLMkU3ZkdKWER2cE85VndaK1JSbFRxYWNRUUZwcWcraEx4NjJqTDQKNklVbUcvcDdFbjJ6eVhQbWIwTUpzanllbDJMU0RONEdwaVY0dHczVU4vS3h6MWpQSHJlVzRvK1V5Nm9MWEx1SwpmUklhY1F2WmUzcDRmQ2l4TEJ2em1NRUxjUlJCbkFrdHd4S2pzeUFWOHZickNQVlVNUXhRMzhxWjBYbGM0cVlXCjYrTE9ManVBSnF0eXhpb0t3OEw5VlhleGw4Tm1PMG5kZTViNHdPK0ZKS1pWL3VYcTZNMWxDQTRQc0NMVlBGVncKZ0ZNZEVDRUNnWUVBNlp6MzZ2OGc4TGhIckdDQjE5MmJxbC9kcGlzeGxobUdBOVZuWDZZUXFQN0syR09HNTVNZwp6Ynh0bm5Na2xNd0xyK2RIbXJBVVQrU1VIQkgyR3dSaVJLYkNvVUtwOVB0VkdKNXNxREVVanhMcHdPdHVqWlA5Ci9ieDFvM0hEckNtY1hYcEVOeWFYOEFBSURhWHBMdnU5ZW4zK3A4VHE0MUFuajNsR3RyMlAxQTBDZ1lFQTZvVXoKVUlFVHJrRjJLQTZmNFlpQTlQRTZqeC9pMk16YWlkMWVQbU9sZ1JxeDlZVGYwQ1pka3J4N0VDaUVvQ1Q0S3huagpUN2MzM3hMVGt0Z3FZM1hkcUxwM2F5aUJ4YnZEMVRDbzRpMTljOTIySUozTmxXUkxUaVB2bjY0WStBN09OZVV1CmVsM0xkWkJNaHlYMzJlY1lXUzBjNFZmOGlsdzZlWnhnTCs3WVlsMENnWUJlNnd4QVN4RVRQWXpCbVNTb2xMNGUKNTN5amU0RldQMkNZUmlrT1QrY05BeGxmK25CaHZ3SGhGZUprTXR4MktNSEc0dTNSQ0NINHBDTVpsS0t1TDRYTgo1d1BGaWRTTVdXSWw4cGlyYmVXd2pEcTF5L0xMUzRvemdsTTU2WXRiZER5NExtbHhEeGxFeG41L0xSNGxuTnRMCjNjMk9WUkFxOC9KZTlTT3FORE13TVFLQmdRRGlGUlRaK0FWTUNNbHFabWJWR2k0UGMvb2EvZ2RITDMxQ1NNalEKNW1rbjQ5OUpMQlpEYUtqdWk0c3JrWlFCZW9KUHNyNURIQUxkcHgyVnc1UmhtNy9iS0I5MWkzQkhlZktaTkRhcgpER1dUYkZwbWFScEdlWkJyUFJPRllXV3F4VU1nQzlkWm1kQkpmcGwzOUM5U3Zvam5keWtQU0M0cUNDMUxEV2hnCjdTVm05UUtCZ1FDdm84ajlwamhTT2pPSEdOamFtaUF0cW5ycXN3WU1PQkxWWkNjbmE4TmdQWWFHM3BNTHAxbUcKcWJMeUxodDVpblV5cGV2Mm5HOXEwdXIrVzBqMHdWSHVWUGY2MWNBYXRoZXdrdWxHb0RyMGZlSW1DaGxUWnVycwpPMWdweU43M3h1cGNlK1huNngvNVFwSm9HeWt6WElKY1luUXExbnZFUGtNUjNsd2JSa1RPbkE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: cilium
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU54UXpTaEZrc1B1NHhoNzFOWjAybTB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURReU5qRXdOVFExTUZvWERUSTJNRFF5TlRFdwpOVFExTUZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUExZ01IL1ZhR0FRRUpzTm1aL3RDeTZEdHFMTzVNM0RkSnB2bHdYU0c0T1AxN3ZtRnMKRm9ab2JjMTdVQ2E3eEZBd1ZOMzBnY0xXZGx2Z1BIa3MyTEgxVUQvOXg1ZFo5bVhwNHVGa3JDN2JhcUpLL2J5OQp3NzJPODBSQ1BES2N1TUpZanBsYjZsRDhVT2Q3QlBvQmhnOUU2c2JlZXltemYxbW1nTzdpRkdXKzAwekdPSmc5CkJ6YmZyZ2lMK3NFQ3BRNnRnazU3STROOWMxd25wN3UyWmRhZ1dmVDg2eGJEQlR5eTNxTUZwN2ZWSktFckN4aXYKdUFtQ1Zvdi9xTjZsRjM3ZUZ0ZlJjaW8yb2ZOam9naXN2SHZhR3pkV3o5YldMcmk4bWJTeVp3ZEx2NXU3OWFlagpvSG5ZYkZDZGE0MGpUN1AwTXFRWlg4aVF5ZEUwWlJ2VjdXVUN1UUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRFpwY1V2V0ZIa3NWZklWM0xEWm96R29ETUlWTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ3VUZmR6V2xuS1hjcFBxUmNmaHVGS2hrOUVaVU02Zkx6Zm0vM3FrSjJ0MCtyUFhtQTFhN2dZCmJQQldUS1VIMnFpeWllMk5jMmd5LzQ0cC9oR3EveEpnSXpienEvMFhxL0hkMWIxdjVEeHdIcjNCWUEzWm1UQW0KaDBTS0tPV1FSZVVoeUF1QThKUzgrOGhxZXVENVFOMlE2T2tlSGJ3bU91bUFMZzZRcU5DVHlYZHFSUFNON0lMVQorRDhVS1d5VEZvNFl0MnVwVm5CQUVGSFhvaGpNRUZTRCtZK3V1VHo3MVdjQ0F1TGp1d1ZzbmtMNU5zYWpGWU1KCnVLTlIreGtiN05XTFlBZkNtNDFXVU5FTlVPVmgrSjhlWFhTcDU4OVRTVVJBNzRlWnh5Ny9mcmtIMittdkRqMVAKbU4zYnFtc29XTkRtM2ZDVWw1K1Vub0hVL1ZxY2dCbVAKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRUTFFejBkZUs3YjEyaEJmaW91RE9DakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TkRJMk1UQTFORFV3V2hjTk1qWXdOREkxTVRBMQpORFV3V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDOXA1OC9abitvckI5OE5UdXdJK0tKTVpzbWJ0RkEKaS9CQUpYdWdMUGt4MnJzWFVVemowWUVhd0V5VDBpa3lKcTVVSmFxNXZ4Z0Z1bEV4c25HZVFxbTVDS2dJM0lwUApYalZGdjJHb1EraVhhbXdFbHF0dlNiaklWblRhQzh1YktqSmwzampWU2lGUU1jWXBEY3M0Rk9lMnRZWThsWTNLCjF4NDB4SFQxWHR2SGN3ZVlHQ1ZGRDRMODEwVjdFL1ZGeGlIWWFmQ2pweEZGd2lYWkFCVGdZRzhFc3lITWllM2EKSyt2K3VMOVluZlE5TW5MOC9hNHRoeHRXWFF1MENJVzRLTWtCNjBpVWZqaGdSdnI0NnNwWVRyd2Q5bDIxZXAzdwp0NnIxYzZ6WWdGOEx2R1lRTm5EcllVWjB6bm9NTlVlYUt6SlRLMEUxejRlQ2NOZjVobXo0Z1dIOUFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZEWnBjVXZXRkhrc1ZmSVYzTERab3pHbwpETUlWTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFiNGFsYTZzUDJNVlF1aEY2REg5dkVJb0lqc0Z1VklTeTVPeEFGT3l1N0txMHhaL0IKSTB0VnRtRXVOT3RnaWNqWmFuamxRYlJpYXh2UnRaR2J4d3Z4ZzZqc3dGWEhpdmduem8rc2VTU05TRmNNaUl5UwpERmhnMktVS2VqQ0lXYng3WGE3WHM5S1hxNDYyNzdHenlNbzY0bkZ6NDJUNTJ5T2dxNkxvUm9QclZidGYyVitMCitFTHFJdXhpd1BSaWxCQ0dkMlFhdllsQkRNZDQweHk3enlsbm1lNjhUU013b2w4TkhwclNmUUFxOFNoeWh6eTkKUjlkZjIrOEkvclVtMmlwT2FTbm03SnZXcG9jWGNRUDlTTlJVaVFRL0dCR1RBTTVQdzJ5MzQ2OHl2bEFTWlFpVgp1dW5iWXpnV2NDbzJjYUlUVUZVZmJyYk9KR05VWWNvQTNIL3pKQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdmFlZlAyWi9xS3dmZkRVN3NDUGlpVEdiSm03UlFJdndRQ1Y3b0N6NU1kcTdGMUZNCjQ5R0JHc0JNazlJcE1pYXVWQ1dxdWI4WUJicFJNYkp4bmtLcHVRaW9DTnlLVDE0MVJiOWhxRVBvbDJwc0JKYXIKYjBtNHlGWjAyZ3ZMbXlveVpkNDQxVW9oVURIR0tRM0xPQlRudHJXR1BKV055dGNlTk1SMDlWN2J4M01IbUJnbApSUStDL05kRmV4UDFSY1loMkdud282Y1JSY0lsMlFBVTRHQnZCTE1oekludDJpdnIvcmkvV0ozMFBUSnkvUDJ1CkxZY2JWbDBMdEFpRnVDakpBZXRJbEg0NFlFYjYrT3JLV0U2OEhmWmR0WHFkOExlcTlYT3MySUJmQzd4bUVEWncKNjJGR2RNNTZERFZIbWlzeVV5dEJOYytIZ25EWCtZWnMrSUZoL1FJREFRQUJBb0lCQUd3VWJtaFBIVWtlYmdMMgp3MEVwOGh1RkxZbkZkWEozVFQ4QkhXYTJ1bnh5emxRSGZPNEhvcStBRHlQZWpLT0w3NlQ4b2tLZ2FDdzdkYklBCm8wY3hiaytJWTFwSmRIaXVrMlZnSDJNbzhBLzZFZnk3Y0k5SFVBcTdXblE0Ykp2TWZGUVpSQUlvOExzbTRtcmEKOVlqTVFSQ2FlaGxra1IyYlloZG9MYzczZEFCQXpsbXVSNnlnbytMYTRwRHNaQS8xN2NKQjcyYzBBdkY4VFo5SwoyanNUcGVIRCtTMFJ3QmZDeE1ocXdSUjFPb01aMjRiTkdzSklkbkNzVitKUUZpaW53ZzR4eUFqYmloRGJwQUlGCnZUblBOVi9iWXpBWHMzMkhiNHVnSjNSckM2bEZTS3hJaFZrZVBoQ3Q5ZzhCOWJ6Z0YyOGNJdS9Zb1Q4bDlFS04Kc0MxcVk0RUNnWUVBMnhIL09FK3JhZVBPdTFhWVpUMEprNUZBT2g1Mzc2aXp0V3F3TkJrdk5EYUZwNlRHalFEaQpOMmRIN1BRMGpsWHlsT1I4amQ1eUZhcTYrYnJaeTdhaFBYYndvUUVNYnBNbktIYk5HKzdSZ1lteVNmSWZRSVEwCm9ldm9SQVcya0dMTkJjNjQ3Q1Rld3dQZ2I0YnlKTG5JSDdrdDloUDBXZDlaZTRuVG83MFlqcmtDZ1lFQTNhQXgKM2RUWUMxMXIrV2UrNU56RnJKTElpR3hSOXZEdXdCVVhYQWtKZDZMRE5va3ZuYWF1dFhsNTZnOG5hUlRldzF2ZAptSU5EZG9PcWtOOUYzUzJNb0Uvc0c1NE8zMHRLRVRPTlRlZU5vVmowdkpQOGpwcGNuWmZtWEZFanlyeXJYZFVTCmQrZStOU1N1UnFRaWN2ak53TkhYcVlnbnFwdml4eDJSbDRDWUsyVUNnWUJqTlRnK1dSNElleWtRLzd0T0JhRkQKbWNEYlVSY0Jpb1d2djV3Q1MvRnJsTkZjUlN2QmlVZm96VFh1WWYwM0JFY3lGSE12a0RCY0RaQlZMY0FhR0IvWApCUGtlQUtxUG5NWmI5Y2tYUUVUU2cvZ2dzcXhpZkR5Vm80N3cxeUdCSzYwclZ4MjVtMHppUmV3cXRaTU0vTEZiClpISWpBWkJqN3RqSU1IZU9yRURseVFLQmdFVHhSM0h0ZTBPVnpUZnBtUTJTeS85U0xnV2FSS2tmNi9WZTJrUnMKSDBEVEpnejZBaEQxd0JWOTgzbm5PdWhLY0wydS96RXBiRHdhMjExengwVDFuWEJsVEZxUEFhdGV2V3k2YjdPVApXNUNjbm8xbkw4S2dyRHp0K3VBdThZWm95SnBJNVJUZHgySzZ4V2YrT1NVdzFyaXJ6bjNUZUJ0dm9NMDJHb3RaCm1ueXRBb0dCQUtIWjJzRVZPVHAwaWJzWXdNSDBIblEyK0lJYXNDUFpEZlQ0UC85YWNDRFUySjFUWkhIVWdqMTgKeEhzRTluSUNGNnNMR3ZENCtpS0loZ2Z1QmpLcGRrdWh0ZzFQOVZHK2p3ZzNSNGhlekdYUTRrWmFGclJIYW0vYwpwV0Q0TDRrQmFBODNkVGc1a0ZoMmlSQmxEcmRvWDNYRXE3NkZ2cUpYN1plTGtqcUxwamJ0Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: cilium
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU54UXpTaEZrc1B1NHhoNzFOWjAybTB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURReU5qRXdOVFExTUZvWERUSTJNRFF5TlRFdwpOVFExTUZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUExZ01IL1ZhR0FRRUpzTm1aL3RDeTZEdHFMTzVNM0RkSnB2bHdYU0c0T1AxN3ZtRnMKRm9ab2JjMTdVQ2E3eEZBd1ZOMzBnY0xXZGx2Z1BIa3MyTEgxVUQvOXg1ZFo5bVhwNHVGa3JDN2JhcUpLL2J5OQp3NzJPODBSQ1BES2N1TUpZanBsYjZsRDhVT2Q3QlBvQmhnOUU2c2JlZXltemYxbW1nTzdpRkdXKzAwekdPSmc5CkJ6YmZyZ2lMK3NFQ3BRNnRnazU3STROOWMxd25wN3UyWmRhZ1dmVDg2eGJEQlR5eTNxTUZwN2ZWSktFckN4aXYKdUFtQ1Zvdi9xTjZsRjM3ZUZ0ZlJjaW8yb2ZOam9naXN2SHZhR3pkV3o5YldMcmk4bWJTeVp3ZEx2NXU3OWFlagpvSG5ZYkZDZGE0MGpUN1AwTXFRWlg4aVF5ZEUwWlJ2VjdXVUN1UUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRFpwY1V2V0ZIa3NWZklWM0xEWm96R29ETUlWTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ3VUZmR6V2xuS1hjcFBxUmNmaHVGS2hrOUVaVU02Zkx6Zm0vM3FrSjJ0MCtyUFhtQTFhN2dZCmJQQldUS1VIMnFpeWllMk5jMmd5LzQ0cC9oR3EveEpnSXpienEvMFhxL0hkMWIxdjVEeHdIcjNCWUEzWm1UQW0KaDBTS0tPV1FSZVVoeUF1QThKUzgrOGhxZXVENVFOMlE2T2tlSGJ3bU91bUFMZzZRcU5DVHlYZHFSUFNON0lMVQorRDhVS1d5VEZvNFl0MnVwVm5CQUVGSFhvaGpNRUZTRCtZK3V1VHo3MVdjQ0F1TGp1d1ZzbmtMNU5zYWpGWU1KCnVLTlIreGtiN05XTFlBZkNtNDFXVU5FTlVPVmgrSjhlWFhTcDU4OVRTVVJBNzRlWnh5Ny9mcmtIMittdkRqMVAKbU4zYnFtc29XTkRtM2ZDVWw1K1Vub0hVL1ZxY2dCbVAKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQU5QbU1MQWRPd3ErMU0zQ0I3WmM4SVF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURReU5qRXdOVFExTUZvWERUSTJNRFF5TlRFdwpOVFExTUZvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU9yRDlNTjFFU3ZSMytHSGhYYWMKdGFXZ0NocEI2amp6RVJpdVBxMGdocFVKTnVuZVdoUTBlNit0QlREd0Y1TjhKS242cEMvU2RLenZpdFMzZlNiTQo0Z2sxZndmN0R6UmxobktTSUc5V0V3T2Y4UkdYdWNNMjZZdjF3ME1FOUNZeXA0RVFRdmR3YXNUSWpQNzNNUldCCkNGQlJNM25ZWCswdVQ1SFhLNWtKc2F2VEVQTk5KOGRKRU1yYnBZcGtKTG1VajZaVmRkbXpNblMwU0RqcUU3YnQKRmJXL1pMZHVhRVY5WkxHalJ4ZldUcnNpelQyZ04zSExpYXRPeTUvcmVIKzRpTlFVQnFjZFFpbnBRbk5MOGxXUQp3b2hhZW9mcDZPbHlVaWpDdE80blUwL1Z3WEVCQmZZSDQxc1dBWURaakpaMi9zR21yNlFOVERrMTlHc0dvc2dSCkppMENBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVU5tbHhTOVlVZVN4Vgo4aFhjc05tak1hZ013aFV3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQXA5U0tFbWMyN3RhWGREemtQS1pOR1JvY0w1angKYmhCTUxWZ1kzaEdRM0gveWt6U0hMcEdhTFByZnN6bFBraVVzQTFmOGtqc0JIbVNsank3ZHk3VElUNzRtTzNIbQprZ0IxU0dNTWhaSnU2aTdQNmRZNzY5MGZqNmhVOEJhY2Z4NjZVYnJTc2tzM2g5NlZhSzFZbGs1TUtpR2dwejNmCld0dHhseXBkQ2M5eDNUa2o1R28wNmoyU2l2ZGs0TmoySFpMRFQraUR5ZE1SaEI1dzRBTCtCckUrQWdWUXh0U24KS2tpcFpHYlNHanhhdUIyREFUZzdDY280TjNkUndUUTgrMkY1clJsMXZTVzV0RDJ6WGs5SHM0ZXdMUXJuVGNDRgpmNDZEalB6NHIxREszR1NCcjhVakRKZlRISy9LZ2xaQTFJSktDVTBGYTFMQnF4ejEzK2l1VFlCT1lBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBNnNQMHczVVJLOUhmNFllRmRweTFwYUFLR2tIcU9QTVJHSzQrclNDR2xRazI2ZDVhCkZEUjdyNjBGTVBBWGszd2txZnFrTDlKMHJPK0sxTGQ5SnN6aUNUVi9CL3NQTkdXR2NwSWdiMVlUQTUveEVaZTUKd3picGkvWERRd1QwSmpLbmdSQkM5M0JxeE1pTS92Y3hGWUVJVUZFemVkaGY3UzVQa2Rjcm1RbXhxOU1RODAwbgp4MGtReXR1bGltUWt1WlNQcGxWMTJiTXlkTFJJT09vVHR1MFZ0YjlrdDI1b1JYMWtzYU5IRjlaT3V5TE5QYUEzCmNjdUpxMDdMbit0NGY3aUkxQlFHcHgxQ0tlbENjMHZ5VlpEQ2lGcDZoK25vNlhKU0tNSzA3aWRUVDlYQmNRRUYKOWdmald4WUJnTm1NbG5iK3dhYXZwQTFNT1RYMGF3YWl5QkVtTFFJREFRQUJBb0lCQVFDeU1EL0VaME84UGRVdgpLaHpMOVpBT0FWWUpyZ1FvYTUyTFhSM25iQ3VhVFY4bnpZUVRsKzVWWGY3MXNSWkQ5Rk1qelVEM3AwYTF5QzlZCjIxaWJyYURYR29xcnRReEtXZERkZnpvdEoyalJOSUhXTjVKZ3NIbzlxREVuMmtleUFucVBCSmUvbGMwRVJiQjMKQ1lwdzV2bzNkQnFkSGZWWllmQTFJdHROa2tVUHczVC81ZUoxcWQ5Zjl5SGYwcU5sWktPeEphZForV3pmRG8xcAovaEU1YmxLZnZWL2g5SVc3aGdEY3d2UEVYbXlwN2c5M1BwcUgzR0p6RVAzZWRFUGw0S3BoZk4wZ0x1VlRUcW12Ci9HOHRHTU1EUHByakFZYVNaakFYOGZ3U1NrK2pGNFgyQ3FWaENyVTRDeXg3dGIwNmV3VjRTMldySFVVb2l3VHEKVjFjQlNleEZBb0dCQVBDZUJpUVN0THZLM3prZWRteHZHNVExYVp4K3lGZVZLZjN2dU1aakpiMllHRWlmaGhLdApLanBVRmlhc1pHQk1yOFExRFZpQVgyOWRRZzVBS0hydkl2R1BnZW9CRmg0dFVaSElyNUZuQ2dtZ2txZHFJYnhyCkZwRElSeEc2Z3c4MFpJZVJEaXJvQndoRjJnQWRJZUEvbzQvODJxcUhYbDFpRk5MSEtHWVpGQUNMQW9HQkFQbkcKS1FqWUNCaWN2K0JYTE9yTm5VT2xuVEY0TDduQTJEWFBmZS9RUzFjVGIrUG5HTFVjNmc2NFMyTm1MZUtDcTlNSgpDLzBYL3REMGo1djJCRTYxU29Tc1JVQnFpT2ZnQlAyUkNablpTWVBVZW1xTUxTWTl0R3ZMdkJEY1phT2sxTWRlClU3Umhkb0hzQTdJRU1XbXhCQ1kyWVQzV3VRZG1jbW1BMmErUWlGTW5Bb0dBQ3dPdzFFWG04QkhCVmlRRzE3L2UKUzFLR214dFNvRys3bEZ3ODRSZjR5azBFRDQ3OTNDMEJHZHB2aVNXckVwMXdEbE0vWVNXL09LSFVQRUxEbDUwSwp4SFFGUm1qMlVqdFEySk9QTmVDNW5PYzB6MlVVVmtPd3JMLytRTm1BMWxsWG9MMExJUHV1RnJyYjE5VjlqMzVhClJtVVV2V21rOERGbE1xRGJRSkUxVVRFQ2dZRUF5d0RNZnh5ZHorc3VZOVpXY213MUFqTUxoSlpySzZ6WnpUcGIKMzlwS01YWmh2VGdwTTZKUmRTOUNUb0pRanNXbmd6amFIcFV2RElPSWFMaldIV1pwTDFXWVgxZDIrQVp4NStqRwpoZDA5UzhFWTBab21ZK3RJeFVmc0RVUWo4NUhYUWthZS8zOHJRME1nYWNIUXExY3N5U1h2ZU1RWTFEUG1qMnNqCkFmY1ZaWWNDZ1lFQTBjZ1BKTU52ZDNOaHJ5aUU3Zk9aRGZ1em1BYVFSTkZLUjIxaWxQL0ZVMUlTSkJTalNIWG0KemNNMUk3Q1o5RklmWm13eEc0ckNhRTVkUkJUZTRVTnIveCtGc0g1RE9DczEvR3ZQb0hSaXlCZnpSc21IVGx2cgpnSkJJV0F4T05ZSW9xalpBZWdkQUNRMGtHcUJGTmQ2dUZ0WHpLNUVucFdNczdwUjh1VU9jeTVNPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: cilium
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: "disabled"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-bpf-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "true"
  enable-local-redirect-policy: "true"
  ipv4-native-routing-cidr: 10.244.0.0/16

  kube-proxy-replacement: "strict"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-endpoint-routes: "true"
  cni-uninstall: "true"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "kubernetes"
  disable-cnp-status-updates: "true"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/sys/fs/cgroup"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: cilium
data:
  config.yaml: |
    cluster-name: default
    peer-service: "hubble-peer.cilium.svc.cluster.local:443"
    listen-address: :4245
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: cilium
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: cilium
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: cilium
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: cilium
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: cilium
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: cilium
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: cilium
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: cilium
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: cilium
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/cilium-configmap-checksum: "9e4969dee000741ba3274b45426a9e60a7b6632e96f5959316ce63eb189307d4"
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "api.cluster.local"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        lifecycle:
          postStart:
            exec:
              command:
              - "bash"
              - "-c"
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        # Check for duplicate mounts before mounting
        - name: cilium-cgroup
          mountPath: /sys/fs/cgroup
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6"
        imagePullPolicy: IfNotPresent
        command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: "api.cluster.local"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "api.cluster.local"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          secretName: cilium-clustermesh
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          optional: true
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: cilium
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/cilium-configmap-checksum: "9e4969dee000741ba3274b45426a9e60a7b6632e96f5959316ce63eb189307d4"
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "api.cluster.local"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: cilium
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
        - name: hubble-relay
          image: "quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: ca.crt
                  path: hubble-server-ca.crt
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: cilium
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
# Source: cilium/templates/cilium-secrets-namespace.yaml
# Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.